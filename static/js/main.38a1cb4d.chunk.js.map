{"version":3,"sources":["components/card.js","App.js","reportWebVitals.js","index.js"],"names":["Card","list","handleDelete","map","item","index","className","onClick","App","useState","input","setInput","setList","value","onChange","target","placeholder","i","filter","el","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAceA,MAdf,YAAoC,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,aACjB,OACID,EAAKE,KAAK,SAACC,EAAMC,GAAa,OAC9B,qBAAKC,UAAU,sBAAf,SACI,sBAAKA,UAAU,YAAf,UACI,wBAASC,QAAS,WAAOL,EAAaG,IAAUC,UAAU,yCAA1D,iBACA,oBAAGA,UAAU,mBAAb,cAAmCF,EAAnC,gBCyCDI,MAzCf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwBF,mBAAS,IAAjC,mBAAOR,EAAP,KAAaW,EAAb,KAkBA,OACE,qBAAKN,UAAU,MAAf,SACI,sBAAKA,UAAU,iBAAf,UAEE,sBAAKA,UAAU,cAAf,UACE,oBAAIA,UAAU,YAAd,sCACA,mBAAGA,UAAU,aAAb,uEAGF,sBAAKA,UAAU,qCAAf,UACE,uBAAOA,UAAU,eAAgBO,MAAOH,EAAOI,SA1BpC,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACrBJ,EAASI,EAAOF,QAyBiEG,YAAY,uBACrF,wBAAQV,UAAW,eAAeC,QAnBvB,WACN,KAAVG,IACDE,GAAQ,SAAAX,GAAI,4BAASA,GAAT,CAAeS,OAC3BC,EAAS,MAgBH,yBAGF,cAAC,EAAD,CAAMV,KAAOA,EAAMC,aA1BN,SAACe,GACpBL,EAASX,EAAKiB,QAAO,SAACC,EAAGd,GAAJ,OAAcA,IAAUY,eCHlCG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.38a1cb4d.chunk.js","sourcesContent":["function Card({list, handleDelete}){\n    return(\n        list.map( (item, index) => {  return(\n        <div className=\"card shadow-lg mt-2\">\n            <div className=\"card-body\"> \n                <button  onClick={()=> { handleDelete(index) }} className=\"btn btn-circle  float-right btn-danger\"> X </button>\n                <p className=\"lead text-center\"> { item } </p>\n            </div>\n        </div>\n    )})\n    );\n\n}\n\nexport default Card;","\nimport './App.css';\nimport Card from './components/card';\nimport React, { useState } from 'react';\n\n\nfunction App() {\n  const [input, setInput] = useState('');\n  const [list, setList] = useState([]);\n\n  const handleChange = ({target}) => {\n    setInput(target.value);\n  }\n\n  const handleDelete = (i) => {\n    setList( list.filter((el,index) => index !== i));\n  }\n\n  const handleSubmit = () => {\n    if(input !== \"\"){\n      setList(list => [ ...list, input]);\n      setInput('');\n    }\n\n  }\n\n  return (\n    <div className=\"App\">\n        <div className=\"container py-5\">\n\n          <div className=\"text-center\">\n            <h2 className=\"display-4\"> Todo List using Reactjs</h2>\n            <p className=\"text-muted\"> Keep track of what you want to do. Lets be organized!</p>\n          </div>\n\n          <div className=\"d-flex justify-content-center py-4\">\n            <input className=\"form-control\"  value={input} onChange={ handleChange } placeholder=\"Enter things to do\" />\n            <button className= \"btn btn-dark\" onClick={ handleSubmit }> Submit </button>  \n          </div>\n\n          <Card list= {list} handleDelete= { handleDelete } />\n\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}